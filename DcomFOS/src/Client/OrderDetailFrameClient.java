/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import FOSInterface.MenuInterface;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class OrderDetailFrameClient extends javax.swing.JFrame {
    int userID;
    int orderID;
    int foodID;
    int quantity;
    int modeID;
    double totalPrice;
    /**
     * Creates new form OrderDetailFrameClient
     */
    public static void createAndShowGUI(int userID, int orderID, int modeID) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {                             
                try {
                    OrderDetailFrameClient frame;
                    frame = new OrderDetailFrameClient(userID, orderID, modeID);
                    frame.setVisible(true);
                } catch (NotBoundException ex) {
                    Logger.getLogger(OrderDetailFrameClient.class.getName()).log(Level.SEVERE, null, ex);
                } catch (MalformedURLException ex) {
                    Logger.getLogger(OrderDetailFrameClient.class.getName()).log(Level.SEVERE, null, ex);
                } catch (RemoteException ex) {
                    Logger.getLogger(OrderDetailFrameClient.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(OrderDetailFrameClient.class.getName()).log(Level.SEVERE, null, ex);
                }         
            }
        });
    } 
    public OrderDetailFrameClient(int userID, int orderID, int modeID) throws NotBoundException, MalformedURLException, RemoteException, SQLException {
        initComponents();
        this.userID = userID;
        this.orderID = orderID;
        this.modeID = modeID;
        btnPay.setVisible(false);
        tfTotal.setEditable(false);
        Registry reg = LocateRegistry.getRegistry("localhost", 1070);
        MenuInterface menuService = (MenuInterface) reg.lookup("MenuInterface");
        List<OrderItem> orderItemList = menuService.getOrderItem(userID, orderID);
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Every cell is non-editable.
            }
        };
        model.setColumnIdentifiers(new Object[]{"FoodID", "FoodName","Quantity", "Price", "Total"});
        model.setRowCount(0);
        jTable1.setModel(model);
        //DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); 
        try {
            for (OrderItem orderItem : orderItemList) {
                double total =0;
                total=orderItem.getQuantity()*orderItem.getPrice();
                model.addRow(new Object[]{orderItem.getFoodId(), orderItem.getFoodname(), orderItem.getQuantity(), orderItem.getPrice(), total});     
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        List<Orders> orderDetailsList = menuService.getOrderDetails(orderID);
        double netTotal =0;
        String status = null;
        int orderModeID = 0;
        try {
            for (Orders orderDetails : orderDetailsList) 
            {
                netTotal = orderDetails.getTotal();
                status = orderDetails.getStatus();
                orderModeID=orderDetails.getModeID();
            }
            //lbTotal=
        } catch (Exception e) {
            e.printStackTrace();
        }
        totalPrice=netTotal;
        tfTotal.setText(String.valueOf(totalPrice));  
        lbStatus.setText(String.valueOf(status));
        if(orderModeID==1)
        {
            lbMode.setText("Dine-in");
        }
        else if(orderModeID==2)
        {
            lbMode.setText("Takeaway");
        }
        else
        {
            lbMode.setText("Mode");
        }
        if(status.matches("unpaid"))
        {
            btnPay.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lbOrderDetail = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lbTotal = new javax.swing.JLabel();
        tfTotal = new javax.swing.JTextField();
        btnPay = new javax.swing.JButton();
        lbStatus = new javax.swing.JLabel();
        lbMode = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("McGee's Food Ordering System (FOS)");

        lbOrderDetail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbOrderDetail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbOrderDetail.setText("Order Details");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        lbTotal.setText("Total (Including 6% GST and 10% Service Tax): ");

        tfTotal.setText("jTextField1");

        btnPay.setText("Pay Now >");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        lbStatus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbStatus.setText("Status");

        lbMode.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbMode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMode.setText("Mode");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbTotal)
                            .addGap(18, 18, 18)
                            .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(213, 213, 213)
                                            .addComponent(lbOrderDetail)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel2)))
                                    .addGap(36, 36, 36))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(39, 39, 39)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lbMode, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbOrderDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbMode, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTotal)
                    .addComponent(tfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        //MenuFrameClient.createAndShowGUI(userID);
        PayStatusClient.createAndShowGUI(userID, modeID);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.rowAtPoint(evt.getPoint());
        //highlight the row at jtable
        jTable1.setRowSelectionInterval(row, row);
        int col = jTable1.columnAtPoint(evt.getPoint());
        if (row >= 0 && col >= 0) {
            Object value = jTable1.getValueAt(row, 0);
            foodID = (int) value;
            System.out.println("Value at clicked cell: " + foodID);
            Object qty = jTable1.getValueAt(row, 2);
            quantity = (int) qty;
            System.out.println("Quantity at clicked cell: " + quantity);
            //lbQuantity.setText(String.valueOf(quantity));
        }
        //btnEdit.setVisible(true);
        //btnDelete.setVisible(true);
        //btnMinus.setVisible(true);
        //btnAdd.setVisible(true);
        //lbQuantity.setVisible(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        System.out.println("Go to YW makePayment page");
        MakePaymentClient.createAndShowGUI(userID, orderID, totalPrice);
        
    }//GEN-LAST:event_btnPayActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPay;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbMode;
    private javax.swing.JLabel lbOrderDetail;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JTextField tfTotal;
    // End of variables declaration//GEN-END:variables
}
